@model ProjectSWP391.DTOs.ShoppingCartViewModel

<link href='https://fonts.googleapis.com/css?family=Roboto:400,100,300,700' rel='stylesheet' type='text/css'>

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="/cart/css/styles.css" rel="stylesheet">


@if (Model.CartItems.Count > 0)
{
    <section class="ftco-section">
        <div class="container-shoppingCart">
            <div class="row justify-content-center">
                <div class="col-md-6 text-center mb-4">
                    <h2 class="heading-section">Shopping Cart</h2>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <form method="get" action="/ShoppingCart/Checkout">
                        <button type="button" class="btn btn-danger" onclick="removeSelectedItems()">Remove Selected</button>
                        <button type="button" class="btn btn-danger" onclick="removeAllItems()">Remove All</button>
                        <div class="table-wrap">
                            <table class="table">
                                <thead class="thead-primary">
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>&nbsp;</th>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Subtotal</th>
                                        <th>&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.CartItems)
                                    {
                                        <tr class="alert" role="alert" data-productid="@item.ProductId">
                                            <td>
                                                <label class="checkbox-wrap checkbox-primary">
                                                    <input type="checkbox">
                                                    <span class="checkmark"></span>
                                                </label>
                                            </td>
                                            <td>
                                                <img class="img" src="@item.Image" />
                                            </td>
                                            <td>
                                                <div class="email">
                                                    <span>@item.ProductName </span>
                                                    <span>@item.Description.Substring(0,10)</span>
                                                </div>
                                            </td>
                                            <td class="price">$@(item.Price.ToString("F2"))</td>
                                            <td class="quantity">
                                                <div class="input-group">
                                                    <input type="number" style="width:100px;" onchange="updateQuantity('@item.ProductId')" name="quantities[@item.ProductId]" class="quantity form-control input-number" min="1" max="999" value="@item.Quantity">
                                                </div>
                                            </td>
                                            <td class="subtotal">$@(item.Price * item.Quantity)</td>
                                            <td>
                                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                                    <span aria-hidden="true"><i class="fa fa-close" onclick="removeItem('@item.ProductId')"></i></span>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                    @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
                                    {
                                        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                                    }
                                </tbody>
                            </table>
                            <p style="float:right" class="total">Total: <b>$@Model.TotalPrice</b></p>
                            <button type="submit" class="btn btn-dark edt-button-submit">Checkout</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
}
else
{
    <p style="text-align:center">Your cart is empty.</p>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="js/jquery.min.js"></script>
<script src="js/popper.js"></script>
<script src="js/bootstrap.min.js"></script>
<script src="js/main.js"></script>

<script>
    function removeItem(productId) {
        window.location.href = "/ShoppingCart/RemoveFromCart?productId=" + productId;
    }

    function removeSelectedItems() {
        var selectedProductIds = [];
        $('input[type="checkbox"]:checked').each(function () {
            var productId = $(this).closest('tr').data('productid');
            selectedProductIds.push(productId);
        });

        if (selectedProductIds.length === 0) {
            alert('Please select at least one item to remove.');
            return;
        }

        if (confirm('Are you sure you want to remove the selected items?')) {
            var url = '/ShoppingCart/RemoveSelectedItems';
            var data = { productIds: selectedProductIds };
            $.post(url, data, function (response) {
                if (response.success) {
                    window.location.reload();
                } else {
                    alert('Failed to remove selected items.');
                }
            });
        }
    }
    
    function removeAllItems() {
        if (confirm('Are you sure you want to remove all items from your cart?')) {
            var url = '/ShoppingCart/RemoveAllItems';
            $.post(url, function (response) {
                if (response.success) {
                    window.location.reload();
                } else {
                    alert('Failed to remove all items from cart.');
                }
            });
        }
    }

    function updateQuantity(productId) {
        var quantityInput = $(`input[name="quantities[${productId}]"]`);
        var quantity = parseInt(quantityInput.val());
        var priceCell = $(`tr[data-productid="${productId}"] .price`);
        var price = parseFloat(priceCell.text().replace('$', ''));

        console.log(productId);
        console.log('Quantity:', quantity);
        console.log('Price:', price);

        if (isNaN(quantity) || isNaN(price)) {
            console.log('Invalid quantity or price');
            return;
        }

        var subtotal = quantity * price;
        $(`tr[data-productid="${productId}"] .subtotal`).text('$' + subtotal.toFixed(2));

        // Update TotalPrice
        var total = 0;
        $('td.subtotal').each(function () {
            total += parseFloat($(this).text().replace('$', ''));
        });
        $('p.total b').text('$' + total.toFixed(2));
    }


</script>
