@model ProjectSWP391.Models.Product

<form action="Index" method="post" id="orderForm">
    <input type="hidden" name="productId" value="@Model.ProductId" />
    <input type="hidden" name="price" value="@Model.Price" />

    <span class="error-message" id="quantity-error"></span>
    <section class="content">
        <div class="details shadow">
            <div class="details__item">

                <div class="item__image">
                    <img class="iphone" src="@Model.Image" alt="">
                </div>
                <div class="item__details">
                    <div class="item__title">
                        @Model.ProductName
                    </div>
                    <div class="item__price">
                        $@Model.Price.ToString("F2")
                    </div>
                    <div class="item__quantity">
                        Quantity:
                        <input type="number" min="1" max="@Model.Quantity" name="productQuantity" id="productQuantity" value="1" />
                    </div>
                    <div class="item__description">
                        <ul style="">
                            <li>Super fast and power efficient</li>
                            <li>A lot of fast memory</li>
                            <li>High resolution camera</li>
                            <li>Smart tools for health and traveling and more</li>
                            <li>Share your games and achievements with your friends via Group Play</li>
                        </ul>
                    </div>
                </div>
            </div>

        </div>
        <div class="discount"></div>

        <div class="container">
            <div class="payment">
                <div class="payment__title">
                    Payment Method
                </div>
                <div class="payment__types">
                    <div class="payment__type payment__type--cc active" name="actionQRcode">
                        <i class="icon icon-credit-card"></i>Pay after Recieve
                    </div>
                    <div class="payment__type payment__type--paypal" name="actionPayAfterReceive">
                        <i class="icon icon-paypal"></i>QR Code
                    </div>
                </div>

                <div class="payment__info">
                    <div class="payment__cc">
                        <div class="payment__title">
                            <i class="icon icon-user"></i>Personal Information
                        </div>
                        <form>
                            <div class="form__cc">
                                <div class="row">
                                    <div class="field">
                                        <div class="title">
                                            Name
                                        </div>
                                        <input type="text" name="Name" class="input txt text-validated" required />
                                        <span class="error-message" id="name-error"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field small">
                                        <div class="title">
                                            Address
                                            <input type="text" name="Address" class="input txt" required />
                                            <span class="error-message" id="address-error"></span>
                                        </div>
                                    </div>
                                    <div class="field small">
                                        <div class="title">
                                            Phone
                                            <span class="numberCircle"></span>
                                        </div>
                                        <input type="text" name="Phone" class="input txt" required />
                                        <span class="error-message" id="phone-error"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field">
                                        <div class="title">
                                            Description
                                        </div>
                                        <input type="text" name="addInfo" class="input txt" required />
                                        <span class="error-message" id="description-error"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field">
                                        <div class="title">
                                            Total:
                                        </div>
                                        <input type="number" id="totalAmount" value="@Model.Price" class="input txt text-validated" disabled />
                                        <span class="error-message" id="totalAmount-error"></span>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="actions">

                <a href="#" class="btn action__submit">
                    Place your Order
                    <i class="icon icon-arrow-right-circle"></i>
                </a>
                <a href="#" class="backBtn">Go Back to Shop</a>

            </div>
        </div>
    </section>
</form>


<style>
    *,
    *:after,
    *:before {
        box-sizing: border-box;
    }

    ul {
        padding-left: 10px;
    }

    body {
        font-family: "Josefin Sans", sans-serif;
        color: #0a0a0a;
        line-height: 1.4;
    }

    a {
        color: #000;
    }

    .error-message {
        color: red;
    }

    .content {
        z-index: 9999;
    }

    .secure,
    .backBtn {
        display: flex;
    }

        .secure span,
        .backBtn span {
            margin-left: 5px;
        }

    .backBtn {
        margin-top: 20px;
    }

    .secure {
        color: #afb5c0;
        align-items: flex-end;
    }

        .secure .icon {
            font-size: 20px;
            line-height: 20px;
        }

    .logo {
        font-size: 20px;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: flex-end;
    }

        .logo .icon {
            font-size: 32px;
            line-height: 32px;
            margin-right: 5px;
        }

    img {
        width: 100%;
        border-radius: 8px 0 0 8px;
    }

    .details {
        max-width: 800px;
        min-height: 300px;
        margin-left: auto;
        margin-right: auto;
        margin-top: -200px;
        background: #fff;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        position: relative;
    }

    .details__item {
        display: flex;
    }

    .details__user {
        background: #f6f9fc;
        padding: 20px;
        border-radius: 8px;
        border: 1px solid #dadada;
    }

    .item__quantity {
        position: absolute;
        right: 50px;
        top: 30px;
        font-size: 20px;
    }

    .item__image {
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .item__image .iphone {
            margin-top: -50px;
            margin-left: -100px;
            width: 200px;
        }

    .item__details {
        padding: 30px;
    }

    .item__title {
        width: 470px;
        font-size: 28px;
        font-weight: 600;
    }

    .item__price {
        font-size: 22px;
        color: #bec3cb;
    }

    .icon {
        font-size: 16px;
        vertical-align: middle;
    }

    header {
        background-color: #f6f9fc;
        min-height: 500px;
        background-image: url("../images/pattern.png");
    }

    .navigation {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 50px 0 80px 0;
        color: #246eea;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 700;
    }

    .container {
        width: 960px;
        margin: 0 auto;
    }

    .shadow {
        box-shadow: 0 15px 35px rgba(50, 50, 93, 0.1), 0 5px 15px rgba(0, 0, 0, 0.07);
    }

    .row {
        display: flex;
    }

    .txt {
        border-color: #e1e8ee;
        width: 100%;
    }

    .input {
        border-radius: 5px;
        border-style: solid;
        border-width: 2px;
        height: 48px;
        padding-left: 15px;
        font-weight: 600;
        font-size: 14px;
        color: #5e6977;
    }

    input[type="text"] {
        display: initial;
        padding: 15px;
    }

    .text-validated {
        border-color: #7dc855;
        background-image: url("../images/icon-tick.png");
        background-repeat: no-repeat;
        background-position: right 18px center;
    }

    .ddl {
        border-color: #f0f4f7;
        background-color: #f0f4f7;
        width: 100px;
        margin-right: 10px;
    }

    .title {
        font-size: 14px;
        padding-bottom: 8px;
    }

    .field {
        padding-top: 15px;
        padding-right: 30px;
        width: 50%;
    }

        .field.small {
            width: auto;
        }

    .notification {
        text-align: center;
        font-size: 28px;
        font-weight: 600;
        display: flex;
        justify-content: center;
    }

        .notification .icon {
            font-size: 28px;
            color: #7dc855;
            line-height: 28px;
            margin-right: 10px;
        }

    .actions {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        padding: 60px 0 40px 0;
    }

    .payment {
        padding: 20px 0 0 0;
    }

    .payment__title {
        margin: 40px 0 20px 0;
        font-size: 18px;
        display: flex;
        text-align: left;
    }

        .payment__title .icon {
            margin-right: 10px;
        }

    .btn {
        font-family: "Josefin Sans", sans-serif;
        border-radius: 8px;
        border: 0;
        letter-spacing: 1px;
        color: #fff;
        background: #246eea;
        padding: 20px 60px;
        white-space: nowrap;
        font-size: 16px;
        line-height: 1;
        text-transform: uppercase;
        transition: all 0.15s ease;
        text-decoration: none;
    }

        .btn .icon {
            margin-left: 10px;
            font-size: 20px;
        }

        .btn:hover {
            -webkit-transform: translateY(-1px);
            transform: translateY(-1px);
            background: #4984ea;
        }

        .btn.action__back {
            background: transparent;
            color: #a0a0a0;
        }

    .payment__types {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .payment__info {
        display: flex;
    }

    .payment__cc {
        flex: 60%;
    }

    .payment__shipping {
        flex: 40%;
    }

    .shipping__info {
        background: #f6f9fc;
        padding: 10px;
        border-radius: 8px;
    }

    .payment__type {
        display: flex;
        border: 2px solid #d9d9d9;
        border-radius: 8px;
        padding: 20px 40px;
        width: 100%;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        color: #d9d9d9;
        transition: all 0.15s ease;
    }

        .payment__type:hover {
            -webkit-transform: translateY(-1px);
            transform: translateY(-1px);
        }

        .payment__type.active {
            color: #0a0a0a;
            background: #f6fcf7;
            border-color: #7dc855;
        }

        .payment__type .icon {
            font-size: 32px;
            margin-right: 10px;
        }

        .payment__type + .payment__type {
            margin-left: 10px;
        }

    .icon-xl {
        font-size: 48px;
        line-height: 48px;
    }

    .content {
        display: block;
    }

    .thankyou {
        display: block;
    }

        .thankyou .details {
            opacity: 1;
            justify-content: center;
            align-items: center;
        }

            .thankyou .details h3 {
                font-weight: 600;
            }

        .thankyou .details__item {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

            .thankyou .details__item .icon-xl {
                font-size: 32px;
                color: #7dc855;
                line-height: 32px;
            }

    .loading {
        position: relative;
    }

        .loading:after {
            -webkit-animation: spinAround .5s infinite linear;
            animation: spinAround .5s infinite linear;
            border: 4px solid #7dc855;
            border-radius: 290486px;
            border-right-color: transparent;
            border-top-color: transparent;
            content: "";
            height: 5em;
            width: 5em;
            position: absolute;
        }

        .loading .details__item {
            opacity: 0;
        }

</style>

<script>
    function updateTotalAmount() {
        const price = parseFloat('@Model.Price');
        const quantity = parseFloat(document.getElementsByName('productQuantity')[0].value);
        const totalAmount = price * quantity;
        document.getElementById('totalAmount').value = totalAmount.toFixed(2);
    }

    function handleQuantityInputChange() {
        const quantityInput = document.getElementById('productQuantity');
        const price = parseFloat('@Model.Price');
        const maxQuantity = parseInt('@Model.Quantity', 10);

        const enteredQuantity = parseInt(quantityInput.value, 10);

        if (enteredQuantity > maxQuantity) {
            quantityInput.value = maxQuantity;
        }

        if (enteredQuantity <= 0) {
            quantityInput.value = 1;
        }
        const totalAmount = price * parseInt(quantityInput.value, 10);
        document.getElementById('totalAmount').value = totalAmount.toFixed(2);
    }

    function validateFormAndSubmit() {
        const nameInput = document.getElementsByName('Name')[0];
        const addressInput = document.getElementsByName('Address')[0];
        const phoneInput = document.getElementsByName('Phone')[0];
        const descriptionInput = document.getElementsByName('addInfo')[0];

        // Remove extra whitespace in the middle of the input fields
        nameInput.value = nameInput.value.replace(/\s+/g, ' ');
        addressInput.value = addressInput.value.replace(/\s+/g, ' ');
        phoneInput.value = phoneInput.value.replace(/\s+/g, ' ');
        descriptionInput.value = descriptionInput.value.replace(/\s+/g, ' ');

        // Reset previous error messages
        document.getElementById('name-error').textContent = '';
        document.getElementById('address-error').textContent = '';
        document.getElementById('phone-error').textContent = '';
        document.getElementById('description-error').textContent = '';

        let hasErrors = false;

        // Check for empty fields and display error messages
        if (nameInput.value.trim() === '') {
            document.getElementById('name-error').textContent = 'Name is required';
            hasErrors = true;
        } else {
            const name = nameInput.value.trim();
            // Check name length, special characters, and numbers
            if (name.length < 5 || name.length > 20 || /\d/.test(name) || /[^a-zA-Z0-9 ]/.test(name)) {
                document.getElementById('name-error').textContent = 'Name must be 5 to 20 characters, letters only, no special characters or numbers';
                hasErrors = true;
            }
        }

        if (addressInput.value.trim() === '') {
            document.getElementById('address-error').textContent = 'Address is required';
            hasErrors = true;
        } else {
            const address = addressInput.value.trim();
            // Check address length and special characters
            if (address.length < 5 || address.length > 20 || /[^a-zA-Z0-9 ]/.test(address)) {
                document.getElementById('address-error').textContent = 'Address must be 5 to 20 characters, letters and numbers only, no special characters';
                hasErrors = true;
            }
        }

        if (phoneInput.value.trim() === '') {
            document.getElementById('phone-error').textContent = 'Phone is required';
            hasErrors = true;
        } else {
            const phone = phoneInput.value.trim();
            // Check phone format (10 digits, starting with 09, 08, 05, or 02)
            if (!/^(09|08|05|02)\d{8}$/.test(phone)) {
                document.getElementById('phone-error').textContent = 'Invalid phone number. Please enter a 10-digit number starting with 09, 08, 05, or 02';
                hasErrors = true;
            }
        }

        if (descriptionInput.value.trim() === '') {
            document.getElementById('description-error').textContent = 'Description is required';
            hasErrors = true;
        } else {
            const description = descriptionInput.value.trim();
            // Check description length
            if (description.length < 5) {
                document.getElementById('description-error').textContent = 'Description must be at least 5 characters';
                hasErrors = true;
            }
        }
        updateTotalAmount();
        if (!hasErrors) {
            document.getElementById('orderForm').submit(); // Submit the form if there are no errors
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        const submitButton = document.querySelector('.btn.action__submit');

        submitButton.addEventListener('click', function (event) {
            event.preventDefault();
            validateFormAndSubmit();
        });

        //Oninput Quantity
        document.getElementById('productQuantity').addEventListener('input', handleQuantityInputChange);

        // Update the total amount when the quantity input changes
        const quantityInput = document.getElementsByName('productQuantity')[0];
        quantityInput.addEventListener('input', updateTotalAmount);
    });

</script>




